#pragma once

/* <-- Core Includes --> */
#include <Windows.h>
#include <thread>
#include <format>
#include <filesystem>
#include <tlhelp32.h>
#include <shlwapi.h>

/* <-- Third Party Includes --> */
#include <Config/Config.hpp>
#include <Dependencies/HttpStatus.hpp>
#include <Exploit/Execution/Execution.hpp>
#include <Dependencies/xor.hpp>
#include <Dependencies/zstd/include/zstd.h>
#include <Dependencies/zstd/include/xxhash.h>
#include <cpr/cpr.h>
#include <cpr/cookies.h>

/* <-- Luau Includes --> */
#include <lgc.h>

/* <-- Defines --> */
#define ARG_CHECK(L, MIN, MAX, T) if (lua_gettop(L) < MIN) { T return 0; } else if (lua_gettop(L) > MAX) { lua_settop(L, MAX); } T
#define DEREFERENCEPOINTER(ptr) (*(std::intptr_t*)ptr)

class Environment {
private:
	static Environment* singleton;
public:
	static auto getSingleton() -> Environment*;
	auto Register(lua_State* L) -> void;
};