#pragma once

/* <-- Core Includes --> */
#include <Windows.h>
#include <map>
#include <winternl.h>

const std::uintptr_t Module = reinterpret_cast<std::uintptr_t>(GetModuleHandleA(nullptr));

#define Rebase(X)(X - 0x400000 + Module)
#define Unbase(X)(X + 0x400000 - Module)

namespace Address {
    const std::uintptr_t robloxStdOut = Rebase(0xF568A0);
    const std::uintptr_t robloxScheduler = Rebase(0xBB8590);
    const std::uintptr_t robloxGetGlobalState = Rebase(0x854B20);
    const std::uintptr_t robloxPseudo2 = Rebase(0x195C8C0);
    const std::uintptr_t robloxPushInstance = Rebase(0x7C6900);
	const std::uintptr_t luauExecute = Rebase(0x19B0770);
	const std::uintptr_t luaOnilobject = Rebase(0x2C1AB50);
	const std::uintptr_t luaHdummynode = Rebase(0x2C1AB30);
}

namespace Offsets {
	enum Scheduler : std::uintptr_t {
		framerate = 280,
		jobStart = 308,
		jobEnd = 312,
		jobName = 16,
		scriptContext = 304,
	};

	enum Signal : std::uintptr_t {
		next = 16,
		state = 20,
	};
}